# -*- coding: utf-8 -*-
"""practical 7set.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P9u9zj_EoH-awm3WHrC8PZroJCchDBGZ
"""

#set unordered and immutable collection of elements
#curly braces{}
#duplicates are removed

#list oredered and mutable
#tuple ordered and immutable

#uses:to remove duplucate values
#mathematical operation union,join,difference,intersection.
l=[1,2,3,4]
print(l)

t=(1,2,3,4)
print(t)

set={1,2,3,5,6,2}
print(set)

#uppercase and lowercase are treated as different
my_set={'hello','hello','HELLO'}
print(my_set)

fruits= {'apple','banana','gauva','apple','hello'}
print(fruits)

#set........{}
#set().......... constructor
#set(iterable)
my_set=set('hello')
print(my_set)

my_set2=set(1234567889)
print(my_set2)
#int is not iterable

#empty set
my_set=set()
print(type(my_set))

set={}
print(type(set))

#set operations
#add,remove,set remove
#adding elements
#set_name.add(element)
#new element is to be added

s1= {1,2,3,4,5}
s1.add(9)
print(s1)

#same element to be added
s1= {1,2,3,4,5}
s1.add(2)
print(s1)

#adding another datatype
s1= {1,2,3,4,5}
s1.add('hello')
print(s1)

#remove
#set_name.remove(element)
#case1 elements exit in the set
s1= {1,2,3,4,5}
s1.remove(2)
print(s1)

#case1 elements does not exit in the set
s1= {1,2,3,4,5}
s1.remove(6)
print(s1)

#discard it does not show any error if the elements are not present in set
s1={1,2,4,5,6,7,8,9,9,7}
s1.discard(0)
print(s1)

#membership checking
s1={1,2,4,5,6,7,8,9,9,7}
print(2 in s1)

#clear-clear all elements
#set_name.clear(element)
s1={1,2,4,5,6,7,8,9,9,7}
s1.clear()
print(s1)

#del keyword-delete the entire set with its structure
s1={1,2,4,5,6,7,8,9,9,7}
del s1
print(s1)